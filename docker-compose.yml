version: "3.8"

services:
  # SQL Server for the IT Store Sales Database
  sqlserver-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-it-store
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${DB_PASSWORD}
      MSSQL_PID: Developer
    volumes:
      - sqlserver-data:/var/opt/mssql
    ports:
      - "1433:1433"
    restart: unless-stopped
    networks:
      - playground-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          '/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}"-Q ''SELECT 1'' -t 1',
        ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  # Database Migration Service
  db-migrations:
    build:
      context: .
      dockerfile: migrations/Dockerfile
    container_name: db-migrations
    environment:
      - DB_HOST=sqlserver-db
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - playground-network
    depends_on:
      sqlserver-db:
        condition: service_healthy
    restart: "no" # Run once and exit

  # Backend API Service (now includes C# execution)
  backend-api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend-api
    ports:
      - "5445:5445"
    environment:
      - NODE_ENV=production
    volumes:
      - ./code:/app/code
    depends_on:
      db-migrations:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - playground-network

  # Frontend Web Application
  frontend-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: frontend-app
    ports:
      - "80:80"
    depends_on:
      - backend-api
    restart: unless-stopped
    networks:
      - playground-network

networks:
  playground-network:
    driver: bridge

volumes:
  sqlserver-data:
